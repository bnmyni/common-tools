global
	log 127.0.0.1 local0 info
	daemon #以后台形式运行harpoxy
	nbproc 1 #设置进程数量
	maxconn 4096
	user root #运行haproxy的用户
	group root #运行haproxy的用户所在的组	
	#pidfile /var/run/haproxy.pid #haproxy 进程PID文件
	#ulimit-n 819200 #ulimit 的数量限制
	#chroot /usr/share/haproxy #chroot运行路径
	#debug #haproxy 调试级别，建议只在开启单进程的时候调试
	#quiet
defaults
	log global
	mode http #默认的模式mode { tcp|http|health }，tcp是4层，http是7层，health只会返回OK
	balance roundrobin #设置默认负载均衡方式-轮询方式,可选值source，leastconn，roundrobin
	timeout connect 5000ms #连接超时
	timeout client 50000ms #客户端超时
	timeout server 50000ms #服务器超时
	#timeout check 2000 #心跳检测超时
	#timeout http-keep-alive 10s #默认持久连接超时时间
	#timeout http-request 10s #默认http请求超时时间
	#timeout queue 1m #默认队列超时时间
	option httplog #日志类别,采用httplog
	option dontlognull #不记录健康检查日志信息
	option http-server-close ## http长连接关闭
	option redispatch #当serverId对应的服务器挂掉后，强制定向到其他健康的服务器，以后将不支持
	option abortonclose #当服务器负载很高的时候，自动结束掉当前队列处理比较久的链接
	option httpclose #每次请求完毕后主动关闭http通道,haproxy不支持keep-alive,只能模拟这种模式的实现
	option forwardfor except 127.0.0.0/8 #如果后端服务器需要获得客户端真实ip需要配置的参数，可以从Http Header中获得客户端ip
	retries 3 #两次连接失败就认为是服务器不可用，也可以通过后面设置
########统计页面配置########
listen status
	bind 0.0.0.0:28080
	mode http #http的7层模式
	#log global
	#log 127.0.0.1 local0 err #错误日志记录
	option httplog #采用http日志格式
	maxconn 10 #默认的最大连接数
	stats enable
	stats refresh 30s #统计页面自动刷新时间
	stats uri /admin_status #统计页面url
	stats realm Private lands #统计页面密码框上提示文本
	stats auth admin:admin #设置监控页面的用户和密码:admin,可以设置多个用户名
	stats auth sunke:aaa111 #设置监控页面的用户和密码：sunke
	stats admin if TRUE #设置手工启动/禁用，后端服务器(haproxy-1.4.9以后版本)
	stats hide-version #隐藏统计页面上HAProxy的版本信息
	
########设置haproxy 错误页面#####
#errorfile 403 /home/haproxy/haproxy/errorfiles/403.http
#errorfile 500 /home/haproxy/haproxy/errorfiles/500.http
#errorfile 502 /home/haproxy/haproxy/errorfiles/502.http
#errorfile 503 /home/haproxy/haproxy/errorfiles/503.http
#errorfile 504 /home/haproxy/haproxy/errorfiles/504.http

frontend http-in
	mode http
	bind *:80 #这里建议使用bind *:80的方式，要不然做集群高可用的时候有问题，vip切换到其他机器就不能访问了。
	acl web hdr(host) -i www.abc.com  #acl后面是规则名称，-i为忽略大小写，后面跟的是要访问的域名，如果访问www.abc.com这个域名，就触发web规则，。
	acl img hdr(host) -i img.abc.com  #如果访问img.abc.com这个域名，就触发img规则。
	acl ip_134 src 192.168.239.134
	acl ip_135 src 192.168.239.135
	use_backend webserver if ip_135
	use_backend imgserver if ip_134
	#use_backend webserver if web   #如果上面定义的web规则被触发，即访问www.abc.com，就将请求分发到webserver这个作用域。
	#use_backend imgserver if img   #如果上面定义的img规则被触发，即访问img.abc.com，就将请求分发到imgserver这个作用域。
	default_backend servers #不满足则响应backend的默认页面
	
backend webserver #webserver作用域
	mode http
	balance roundrobin #负载模式
	#option httpchk /index.html HTTP/1.0 #健康检查, 检测文件，如果分发到后台index.html访问不到就不再分发给它
	server web1 192.168.239.135:28085 cookie 1 weight 5 check inter 2000 rise 2 fall 3
	server web2 192.168.239.135:28086 cookie 2 weight 3 check inter 2000 rise 2 fall 3
	#cookie 1表示serverid为1，check inter 1500 是检测心跳频率 
	#rise 2是2次正确认为服务器可用，fall 3是3次失败认为服务器不可用，weight代表权重

backend imgserver
	mode http
	#option httpchk /index.php
	balance roundrobin 
	server img01 192.168.239.134:28081 check inter 2000 fall 3
	server img02 192.168.239.134:28082 check inter 2000 fall 3
	
backend servers
	server server1 192.168.239.134:28091 check maxconn 32
	server server2 192.168.239.135:28091 check maxconn 32
	
listen 8090
    bind *:8090
    mode http
    balance roundrobin
    server web1 192.168.239.134:28090 maxconn 1024 weight 5 check inter 2000 rise 2 fall 3
    server web2 192.168.239.135:28090 maxconn 1024 weight 3 check inter 2000 rise 2 fall 3	
	
## http://www.ttlsa.com/linux/haproxy-study-tutorial/